{
  "configurations": [
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "unpack-backend:src/controllers/deliveryController.encryptDeliveryDetailsController (nodejs18.x)",
      "invokeTarget": {
        "target": "code",
        "projectRoot": "${workspaceFolder}/",
        "lambdaHandler": "src/controllers/deliveryController.encryptDeliveryDetailsController"
      },
      "lambda": {
        "runtime": "nodejs18.x",
        "payload": {},
        "environmentVariables": {}
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "Invoke Lambda with API Gateway",
      "invokeTarget": {
        "target": "api",
        "templatePath": "Template Location",
        "logicalId": "Function Logical ID"
      },
      "api": {
        "path": "Path",
        "httpMethod": "Method",
        "payload": {
          "json": {}
        }
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "Invoke Lambda",
      "invokeTarget": {
        "target": "code",
        "lambdaHandler": "Function Handler",
        "projectRoot": "${workspaceFolder}"
      },
      "lambda": {
        "runtime": "Lambda Runtime",
        "payload": {
          "json": {}
        }
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "Invoke Lambda",
      "invokeTarget": {
        "target": "template",
        "templatePath": "Template Location",
        "logicalId": "Function Logical ID"
      },
      "lambda": {
        "payload": {
          "json": {}
        }
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "Invoke Lambda",
      "invokeTarget": {
        "target": "code",
        "lambdaHandler": "Function Handler",
        "projectRoot": "${workspaceFolder}"
      },
      "lambda": {
        "runtime": "Lambda Runtime",
        "payload": {
          "json": {}
        }
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "Invoke Lambda with API Gateway",
      "invokeTarget": {
        "target": "api",
        "templatePath": "Template Location",
        "logicalId": "Function Logical ID"
      },
      "api": {
        "path": "Path",
        "httpMethod": "Method",
        "payload": {
          "json": {}
        }
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "Invoke Lambda with API Gateway",
      "invokeTarget": {
        "target": "api",
        "templatePath": "Template Location",
        "logicalId": "Function Logical ID"
      },
      "api": {
        "path": "Path",
        "httpMethod": "Method",
        "payload": {
          "json": {}
        }
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "unpack-backend:src/util/generateJwtToken.generateJwtToken (nodejs18.x)",
      "invokeTarget": {
        "target": "code",
        "projectRoot": "${workspaceFolder}/",
        "lambdaHandler": "src/util/generateJwtToken.generateJwtToken"
      },
      "lambda": {
        "runtime": "nodejs18.x",
        "payload": {},
        "environmentVariables": {}
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "unpack-backend:src/services/userService.uploadProfilePictureService (nodejs18.x)",
      "invokeTarget": {
        "target": "code",
        "projectRoot": "${workspaceFolder}/",
        "lambdaHandler": "src/services/userService.uploadProfilePictureService"
      },
      "lambda": {
        "runtime": "nodejs18.x",
        "payload": {},
        "environmentVariables": {}
      }
    }
  ]
}
